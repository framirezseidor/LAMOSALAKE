name: Lamosa lake deploy

on:
  pull_request:
    types:
      - closed
    branches:
      - main
 
jobs:
  deploy_if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      ORIGIN_PREFIX: "SQ1_"
      PROD_PREFIX: "SP1_"
      SNOWSQL_ACCOUNT:  "RANAZVP-QFB08200"
      SNOWSQL_USER:      "FIDELRAMIREZ"
      SNOWSQL_PWD:       ${{ secrets.SNOWFLAKE_PASSWORD }}
#      SNOWSQL_ROLE:      ${{ secrets.SNOWSQL_ROLE }}
      SNOWSQL_WAREHOUSE: "COMPUTE_WH"
      SNOWSQL_DATABASE:  "LAMOSALAKE_PRD"
      SNOWSQL_SCHEMA:    "RAW"      

      SNOWFLAKE_ACCOUNT:   "RANAZVP-QFB08200"
      SNOWFLAKE_USER:      "FIDELRAMIREZ"
      SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE:      "ACCOUNTADMIN"
      SNOWFLAKE_WAREHOUSE: "WAREHOUSEGRAL"
      SNOWFLAKE_DATABASE:  "LAMOSALAKE_PRD"
      SNOWFLAKE_SCHEMA:    "RAW"


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configurar credenciales snowflake
        run: |
          mkdir -p .snowflake
          cat <<EOF > .snowflake/config.toml
          default_connection_name = "conectionSnowflake"
          [connections]
          [connections.conectionSnowflake]
          account = "RANAZVP-QFB08200"
          user = "FIDELRAMIREZ"
          password = "${{ secrets.SNOWFLAKE_PASSWORD }}"
          database = "LAMOSALAKE_PRD"
          schema = "RAW"          
          warehouse = "COMPUTE_WH"
          
      - name: Verify Snowflake config file
        run: ls -la .snowflake && cat .snowflake/config.toml


#      - name: Install snowflake-cli
#        uses: Snowflake-Labs/snowflake-cli-action@v1.5
#        with:
#          cli-version: "latest"
#          default-config-file-path: ".snowflake/config.toml"

      - name: Install snowcli
        run: |
          pip install snowflake-cli-labs          
     
      - name: Check Version and Verify Connection
        run: |
              snow --version
              snow connection test
              echo "Using branch $GITHUB_REF_NAME"
              
              
      - name: Reemplazar prefijo para producción
        run: |
          echo "Reemplazando prefijo en los archivos SQL"
          find . -type f -iname '*.sql' -print0 | xargs -0 -r sed -i -E "s/\b${ORIGIN_PREFIX}/${PROD_PREFIX}/g"
          echo "Estoy en: $(pwd)"
          echo "Cantidad de .sql encontrados: $(find . -type f -iname '*.sql' | wc -l)"

      - name: Buscar el archivo SQL
        run: |
          find . -iname "FCT_COM_REV_VENTAS.SQL"          

      - name: Deploy scripts RAW to prod environment
        run: |
          echo "Ejecutando scripts en Snowflake…"
          snow sql -f "./COMERCIAL/FCT_COM_REV_VENTAS.sql"
         

      
       

        
        