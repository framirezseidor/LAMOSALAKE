name: Desplegar cambios 
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'
        required: false


# on:
#   pull_request:
#     types: [opened, synchronize, reopened]  # se ejecuta al cerrar/mergear el PR
#     branches:
#       - main

jobs:
  deploy:
#    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # necesario para comparar commits

      # 2️⃣ Detectar archivos SQL modificados en el PR
      - name: Obtener archivos modificados
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          separator: "\n"
          files: "**/*.sql"
          sha: ${{ github.event.pull_request.base.sha }}
          base_sha: ${{ github.event.pull_request.head.sha }}

      - name: Mostrar archivos modificados
        run: |
          echo "Archivos modificados en este PR:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"

      # 3️⃣ Reemplazo de prefijo para producción
      - name: Reemplazar prefijo en archivos SQL
        env:
          ORIGIN_PREFIX: "SQ1_"
          PROD_PREFIX: "SP1_"
        run: |
          while IFS= read -r file; do
            if [[ -f "$file" ]]; then
              sed -i -E "s/\b${ORIGIN_PREFIX}/${PROD_PREFIX}/g" "$file"
            fi
          done <<< "${{ steps.changed-files.outputs.all_changed_files }}"

      # 4️⃣ Ejecutar scripts modificados por tipo de objeto
      - name: Ejecutar scripts SQL modificados
        run: |
          set -e
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"

          # Ejecutar primero TABLES
          echo "=== Ejecutando TABLES modificadas ==="
          echo "$CHANGED_FILES" | grep "/TABLES/" | sort | while read file; do
            [[ -f "$file" ]] && echo "→ $file" && snow sql -f "$file"
          done
