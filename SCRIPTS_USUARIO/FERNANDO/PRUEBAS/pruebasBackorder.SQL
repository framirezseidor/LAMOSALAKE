--QUE CUADRE LA PARTE NUESTRO DESARROLO CONTRA LA PARTE DE TRANSACCIONES DE SAP

SELECT COUNT(*) FROM RAW.SQ1_MOF_ZBWSD_PEDIDOS_BACKORDER;
SELECT COUNT(*) FROM PRE.PFCT_COM_BACKORDER;
SELECT COUNT(*) FROM CON.FCT_COM_REV_BACKORDER_ACT;
SELECT COUNT(*) FROM CON.FCT_COM_ADH_BACKORDER_ACT;

SELECT * FROM RAW.PARAMETROS_EXTRACCION;

-- ==========================================
-- üìä PRUEBAS DE CONTEO Y ESTRUCTURA
-- ==========================================

-- 1. Conteo de registros por tabla
SELECT 'RAW' AS tabla, COUNT(*) AS total FROM RAW.SQ1_MOF_ZBWSD_PEDIDOS_BACKORDER
UNION ALL
SELECT 'PRE', COUNT(*) FROM PRE.PFCT_COM_BACKORDER
UNION ALL
SELECT 'CON_REV', COUNT(*) FROM CON.FCT_COM_REV_BACKORDER_ACT
UNION ALL
SELECT 'CON_ADH', COUNT(*) FROM CON.FCT_COM_ADH_BACKORDER_ACT;

-- 2. Verificaci√≥n de que REV + ADH = PRE
WITH conteos AS (
  SELECT 
    (SELECT COUNT(*) FROM PRE.PFCT_COM_BACKORDER) AS pre_count,
    (SELECT COUNT(*) FROM CON.FCT_COM_REV_BACKORDER_ACT) AS rev_count,
    (SELECT COUNT(*) FROM CON.FCT_COM_ADH_BACKORDER_ACT) AS adh_count
)
SELECT *, rev_count + adh_count AS suma_con,
       CASE WHEN rev_count + adh_count = pre_count THEN '‚úÖ OK' ELSE '‚ùå Diferencia' END AS validacion
FROM conteos;

SELECT COUNT(*) FROM CON.VW_FCT_COM_ADH_BACKORDER;
SELECT COUNT(*) FROM CON.VW_FCT_COM_REV_BACKORDER;

-- 3. Conteo de columnas por tabla
SELECT TABLE_SCHEMA, TABLE_NAME, COUNT(*) AS num_columnas
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME IN ('SQ1_MOF_ZBWSD_PEDIDOS_BACKORDER', 'PFCT_COM_BACKORDER', 
                     'FCT_COM_REV_BACKORDER_ACT', 'FCT_COM_ADH_BACKORDER_ACT')
  AND TABLE_SCHEMA IN ('RAW', 'PRE', 'CON')
GROUP BY TABLE_SCHEMA, TABLE_NAME;

-- 4. Columnas faltantes o adicionales entre PRE y CON_ADH  [IND_BO_MONEDA_DOCUMENTO -> IND_BO_IMPORTE_DOC]
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'PRE' AND TABLE_NAME = 'PFCT_COM_BACKORDER'
MINUS
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'CON' AND TABLE_NAME = 'FCT_COM_ADH_BACKORDER_ACT';

-- 5. Columnas faltantes o adicionales entre PRE y CON_REV [ASESORFACTURA_ID -> ASESORPEDIDO_ID]
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'PRE' AND TABLE_NAME = 'PFCT_COM_BACKORDER'
MINUS
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'CON' AND TABLE_NAME = 'FCT_COM_REV_BACKORDER_ACT';

-- ==========================================
-- üß© PRUEBAS DE CONSISTENCIA DE DATOS
-- ==========================================

-- 6. Nulos en campos clave
SELECT 'PRE', COUNT(*) FROM PRE.PFCT_COM_BACKORDER WHERE PEDIDO IS NULL
UNION ALL
SELECT 'CON_ADH', COUNT(*) FROM CON.FCT_COM_ADH_BACKORDER_ACT WHERE PEDIDO IS NULL
UNION ALL
SELECT 'CON_REV', COUNT(*) FROM CON.FCT_COM_REV_BACKORDER_ACT WHERE PEDIDO IS NULL;

-- 7. Duplicados por PEDIDO + P EDIDO_POS
SELECT 'PRE' AS tabla, PEDIDO, PEDIDO_POS, COUNT(*) AS repeticiones
FROM PRE.PFCT_COM_BACKORDER
GROUP BY PEDIDO, PEDIDO_POS HAVING COUNT(*) > 1;

-- 8. Tipos de timestamp distintos [VALIDAR LA PARTE DE FECHA CARGA EN PRE]
SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME IN ('PFCT_COM_BACKORDER', 'FCT_COM_ADH_BACKORDER_ACT', 'FCT_COM_REV_BACKORDER_ACT')
  AND COLUMN_NAME = 'FECHA_CARGA';

-- 9. Valores √∫nicos de SOCIEDAD_ID por tabla
SELECT 'PRE' AS tabla, SOCIEDAD_ID FROM PRE.PFCT_COM_BACKORDER GROUP BY SOCIEDAD_ID
UNION ALL
SELECT 'REV', SOCIEDAD_ID FROM CON.FCT_COM_REV_BACKORDER_ACT GROUP BY SOCIEDAD_ID
UNION ALL
SELECT 'ADH', SOCIEDAD_ID FROM CON.FCT_COM_ADH_BACKORDER_ACT GROUP BY SOCIEDAD_ID;

-- 10. Intersecci√≥n de sociedades REV y ADH
WITH rev AS (
  SELECT DISTINCT SOCIEDAD_ID FROM CON.FCT_COM_REV_BACKORDER_ACT
),
adh AS (
  SELECT DISTINCT SOCIEDAD_ID FROM CON.FCT_COM_ADH_BACKORDER_ACT
)
SELECT * FROM rev INTERSECT SELECT * FROM adh;

-- 11. Mostrar SOCIEDAD_ID por origen (REV/ADH)
SELECT 'REV' AS origen, SOCIEDAD_ID FROM CON.FCT_COM_REV_BACKORDER_ACT GROUP BY SOCIEDAD_ID
UNION ALL
SELECT 'ADH', SOCIEDAD_ID FROM CON.FCT_COM_ADH_BACKORDER_ACT GROUP BY SOCIEDAD_ID;

-- ==========================================
-- üìÖ PRUEBAS DE FECHAS
-- ==========================================

-- 12. Fechas fuera de rango
SELECT 'PRE', COUNT(*) FROM PRE.PFCT_COM_BACKORDER
WHERE FECHA_DOCUMENTO < '2025-01-01' OR FECHA_DOCUMENTO > CURRENT_DATE + 7;

-- 13. Fechas m√≠nimas y m√°ximas por capa [AUN NO SE TIENE EL CAMPO DESDE EL EXTRACTOR]
SELECT 'PRE' AS tabla, MIN(FECHA_DOCUMENTO), MAX(FECHA_DOCUMENTO)
FROM PRE.PFCT_COM_BACKORDER
UNION ALL
SELECT 'REV', MIN(FECHA_DOCUMENTO), MAX(FECHA_DOCUMENTO)
FROM CON.FCT_COM_REV_BACKORDER_ACT
UNION ALL
SELECT 'ADH', MIN(FECHA_DOCUMENTO), MAX(FECHA_DOCUMENTO)
FROM CON.FCT_COM_ADH_BACKORDER_ACT;

-- ==========================================
-- üìê PRUEBAS DE M√âTRICAS NUM√âRICAS
-- ==========================================

-- 14. Valores negativos en indicadores
SELECT 'PRE', COUNT(*) FROM PRE.PFCT_COM_BACKORDER WHERE IND_BO_TOTAL_EST < 0
UNION ALL
SELECT 'REV', COUNT(*) FROM CON.FCT_COM_REV_BACKORDER_ACT WHERE IND_BO_TOTAL_M2 < 0
UNION ALL
SELECT 'ADH', COUNT(*) FROM CON.FCT_COM_ADH_BACKORDER_ACT WHERE IND_BO_TOTAL_TON < 0;

-- 15. Unidad de medida por capa [VALIDAR POR QUE SE TIENE UN ST EN REV]
SELECT DISTINCT 'PRE' AS tabla, UNI_EST FROM PRE.PFCT_COM_BACKORDER
UNION ALL
SELECT DISTINCT 'REV', UNI_EST FROM CON.FCT_COM_REV_BACKORDER_ACT
UNION ALL
SELECT DISTINCT 'ADH', UNI_EST FROM CON.FCT_COM_ADH_BACKORDER_ACT;

SELECT * FROM CON.FCT_COM_REV_BACKORDER_ACT WHERE UNI_EST = 'ST';

-- 16. Suma total de IND_BO_IMPORTE_DOC por capa
SELECT 'PRE', SUM(IND_BO_MONEDA_DOCUMENTO) FROM PRE.PFCT_COM_BACKORDER
UNION ALL
SELECT 'REV', SUM(IND_BO_IMPORTE_DOC) FROM CON.FCT_COM_REV_BACKORDER_ACT
UNION ALL
SELECT 'ADH', SUM(IND_BO_IMPORTE_DOC) FROM CON.FCT_COM_ADH_BACKORDER_ACT;

-- 16.1 Suma total combinada de importes
SELECT 
    SUM(IMPORTE_TOTAL) AS suma_total
FROM (
    SELECT SUM(IND_BO_IMPORTE_DOC) AS IMPORTE_TOTAL FROM CON.FCT_COM_REV_BACKORDER_ACT
    UNION ALL
    SELECT SUM(IND_BO_IMPORTE_DOC) FROM CON.FCT_COM_ADH_BACKORDER_ACT
) t;

SELECT 
    SUM(ind_bo_total_m2) AS suma_total
FROM CON.FCT_COM_REV_BACKORDER_ACT;
-- ==========================================
-- üß™ DIFERENCIAS L√ìGICAS ENTRE CAPAS
-- ==========================================

-- 17. Columnas exclusivas ADH vs REV
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'FCT_COM_ADH_BACKORDER_ACT'
MINUS
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'FCT_COM_REV_BACKORDER_ACT';

-- 18. Validaci√≥n de campo exclusivo "LOTE" (REV)
SELECT COUNT(*) FROM CON.FCT_COM_REV_BACKORDER_ACT WHERE LOTE IS NULL;

-- 19. Validaci√≥n de campo exclusivo "UEN_ADHESIVOS_ID" (ADH) [PUEDE SER NULO?]
SELECT COUNT(*) FROM CON.FCT_COM_ADH_BACKORDER_ACT WHERE UEN_ADHESIVOS_ID IS NULL;

-- 20. Renombramiento de ASESORFACTURA_ID vs ASESORPEDIDO_ID
SELECT DISTINCT ASESORFACTURA_ID FROM PRE.PFCT_COM_BACKORDER
UNION
SELECT DISTINCT ASESORPEDIDO_ID FROM CON.FCT_COM_ADH_BACKORDER_ACT;

-- ==========================================
-- üßæ INTEGRIDAD REFERENCIAL
-- ==========================================

-- 21. CLIENTE_ID de PRE que no existen en ADH ni REV
SELECT DISTINCT CLIENTE_ID FROM PRE.PFCT_COM_BACKORDER
MINUS
SELECT DISTINCT CLIENTE_ID FROM CON.FCT_COM_ADH_BACKORDER_ACT
MINUS
SELECT DISTINCT CLIENTE_ID FROM CON.FCT_COM_REV_BACKORDER_ACT;

-- 22. MATERIAL_ID en PRE no existente en CON (REV + ADH)
SELECT DISTINCT MATERIAL_ID FROM PRE.PFCT_COM_BACKORDER
MINUS
SELECT DISTINCT MATERIAL_ID FROM CON.FCT_COM_REV_BACKORDER_ACT
MINUS
SELECT DISTINCT MATERIAL_ID FROM CON.FCT_COM_ADH_BACKORDER_ACT;

-- 23. Validaci√≥n de que combinaci√≥n PEDIDO + POS sea √∫nica en PRE
SELECT PEDIDO, PEDIDO_POS, COUNT(*) AS repeticiones
FROM PRE.PFCT_COM_BACKORDER
GROUP BY PEDIDO, PEDIDO_POS
HAVING COUNT(*) > 1;


-- TRUNCATE TABLE PRE.PFCT_COM_BACKORDER;

SELECT COUNT(*) FROM PRE.PFCT_COM_BACKORDER; --887